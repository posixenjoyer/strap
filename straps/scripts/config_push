#!/usr/bin/env bash

# Setup some convenience variables.
SRC_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
dry="0"

while [[ $# > 0 ]]; do
	if [[ $1 == "--dry" ]]; then
		dry="1"
	else
		filter="$1"
	fi
	shift
done

log() {
	if [[ $dry == "1" ]]; then
		echo "[DRY RUN]: $@" 1>&2
		echo "[DRY RUN]: copying files: ${@:3}" 1>&2
	else
		echo "copying files: ${@:3}" 1>&2
	fi
}

execute() {
	log "execute $@"
	if [[ $dry == "1" ]]; then
		echo "[execute] We're going in dry"
		return
	fi

	"$@"
}


log "-------------- dev --------------"

copy_dir() {
	if [[ $# < 2 ]]; then
		echo "Too few arguments to copy_dir()"
		exit 1
	fi

	from=$1
	to=$2

	if [[ ! -d $from ]]; then
		mkdir -p $from
	fi

	pushd $from > /dev/null 2>&1
	old_dirs=$(find . -mindepth 1 -maxdepth 1 -type d)
	echo "Old_dirs: $old_dirs"

	for dir in $old_dirs; do
		if [[ $dry == "1" ]]; then
        		log rm -rf $to/$dir
        		log cp -r $dir $to/$dir
		else
			execute rm -rf $to/$dir
        		execute cp -r $dir $to/$dir
		fi
	done
	popd > /dev/null 2>&1
}

if [[ -v $XDG_CONFIG_HOME || -z "$XDG_CONFIG_HOME" ]];then
	XDG_CONFIG_HOME=$HOME/.config
fi

copy_file() {
	from=$1
	to=$2

	name=$(basename $from)

	if [[ $dry == "1" ]]; then
       		log rm -rf $to/$name
       		log cp $from $to/
	else
       		execute rm -rf $to/$name
       		execute cp $from $to/$name
	fi
}


# I felt like primeagen got a little lazy with his design, so I decided
# that we should just use ./dot-files like a roaming skel.

copy_files() {
	from=$1
	to=$2

	pushd $from > /dev/null 2>&1
	files=$(find . -mindepth 1 -maxdepth 1 -type f)
	for file in $files; do
		if [[ $dry == "1" ]]; then
        		log rm -rf $to/$file
		else
			execute rm -rf $to/$file
			cp $file $to
		fi
	done

	popd >& /dev/null 2>&1
}

if [[ -v $XDG_CONFIG_HOME || -z "$XDG_CONFIG_HOME" ]];then
	XDG_CONFIG_HOME=$HOME/.config
fi
copy_dir .config $XDG_CONFIG_HOME
copy_files dot-files $HOME
copy_file .sconfig $HOME
